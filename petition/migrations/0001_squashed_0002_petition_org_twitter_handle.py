# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-02-20 13:29
from __future__ import unicode_literals

import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Petition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', tinymce.models.HTMLField()),
                ('text', tinymce.models.HTMLField()),
                ('background', models.ImageField(blank=True, upload_to='')),
                ('mobile_background', models.ImageField(blank=True, upload_to='')),
                ('top_picture', models.ImageField(blank=True, upload_to='')),
                ('side_text', tinymce.models.HTMLField(blank=True)),
                ('target', models.IntegerField(default=500)),
                ('linear_gradient_direction', models.CharField(blank=True, choices=[('no gradient', 'no gradient'), ('to right', 'to right'), ('to bottom', 'to bottom'), ('to bottom right', 'to bottom right'), ('to bottom left', 'to bottom left')], default='no gradient', max_length=15)),
                ('gradient_from', colorfield.fields.ColorField(blank=True, max_length=18)),
                ('gradient_to', colorfield.fields.ColorField(blank=True, max_length=18)),
                ('bgcolor', colorfield.fields.ColorField(blank=True, max_length=18)),
                ('footer_text', tinymce.models.HTMLField(default='Cette pétition est hébergée sur le site de RAP.')),
                ('footer_links', tinymce.models.HTMLField(blank=True)),
                ('twitter_description', models.CharField(blank=True, max_length=200)),
                ('twitter_image', models.CharField(blank=True, max_length=500)),
                ('has_newsletter', models.BooleanField(default=False)),
                ('newsletter_subscribe_http_data', models.TextField(blank=True)),
                ('newsletter_subscribe_http_mailfield', models.CharField(blank=True, max_length=100)),
                ('newsletter_subscribe_http_url', models.CharField(blank=True, max_length=1000)),
                ('newsletter_subscribe_mail_subject', models.CharField(blank=True, max_length=1000)),
                ('newsletter_subscribe_mail_from', models.CharField(blank=True, max_length=500)),
                ('newsletter_subscribe_mail_to', models.CharField(blank=True, max_length=500)),
                ('newsletter_subscribe_method', models.CharField(choices=[('MAIL', 'MAIL'), ('POST', 'POST'), ('GET', 'GET')], default='MAIL', max_length=4)),
                ('published', models.BooleanField(default=False)),
                ('newsletter_text', models.CharField(blank=True, max_length=1000)),
                ('sign_form_footer', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Signature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('confirmation_hash', models.CharField(max_length=128)),
                ('confirmed', models.BooleanField(default=False)),
                ('subscribed_to_mailinglist', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('petition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='petition.Petition')),
            ],
        ),
        migrations.AddField(
            model_name='petition',
            name='org_twitter_handle',
            field=models.CharField(default='@RAP_Asso', max_length=20),
            preserve_default=False,
        ),
    ]
